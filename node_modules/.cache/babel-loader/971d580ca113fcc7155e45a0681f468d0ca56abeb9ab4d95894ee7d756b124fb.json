{"ast":null,"code":"const {\n  web3\n} = require(\"./web3\");\nconst compileContract = require(\"../contract/ptTrans.json\");\n\n// 取得部署在網路上的智能合約物件 (ganache-cli 或測試網路或主網路)\n// 網路可以在 web3 檔案中選擇\n\nconst getContractObject = () => {\n  const contractReceipt = require(\"./receipt-metamask.json\");\n  // 建立智能合約物件/實例\n  const contractObject = new web3.eth.Contract(compileContract.abi, contractReceipt.address);\n  return contractObject;\n};\nconst payee = async () => {\n  const contractObject = getContractObject();\n  const result = await contractObject.methods.payee().call();\n  return result;\n};\nconst payer = async () => {\n  const contractObject = getContractObject();\n  const result = await contractObject.methods.payer().call();\n  return result;\n};\nconst amount = async () => {\n  const contractObject = getContractObject();\n  const result = await contractObject.methods.amount().call();\n  return result;\n};\nconst deadline = async () => {\n  const contractObject = getContractObject();\n  const result = await contractObject.methods.deadline().call();\n  return result;\n};\nconst checkContractStatus = async () => {\n  const contractObject = getContractObject();\n  const result = await contractObject.methods.checkContractStatus().call();\n  return result;\n};\nconst finishContract = async () => {\n  const accounts = await web3.eth.getAccounts();\n  const contractObject = getContractObject();\n  const receipt = await contractObject.methods.finishContract().send({\n    from: accounts[0],\n    gas: 1000000\n  });\n  console.info(receipt);\n  console.info(\"Contract successfully finished!\");\n  return receipt;\n};\nconst terminateContract = async () => {\n  const accounts = await web3.eth.getAccounts();\n  const contractObject = getContractObject();\n  const receipt = await contractObject.methods.terminateContract().send({\n    from: accounts[0],\n    gas: 1000000\n  });\n  console.info(receipt);\n  console.info(\"Contract successfully terminated!\");\n  return receipt;\n};\nconst prePay = async value => {\n  const accounts = await web3.eth.getAccounts();\n  const contractObject = getContractObject();\n  const receipt = await contractObject.methods.prePay().send({\n    from: accounts[0],\n    value: web3.utils.toWei(value, 'ether'),\n    gas: 1000000\n  });\n  console.info(receipt);\n  console.info(\"Pre-payment successful!\");\n  return receipt;\n};\nconst shipItem = async () => {\n  const accounts = await web3.eth.getAccounts();\n  const contractObject = getContractObject();\n  const receipt = await contractObject.methods.shipItem().send({\n    from: accounts[0],\n    gas: 1000000\n  });\n  console.info(receipt);\n  console.info(\"Item shipped successfully!\");\n  return receipt;\n};\nconst confirmReceived = async () => {\n  const accounts = await web3.eth.getAccounts();\n  const contractObject = getContractObject();\n  const receipt = await contractObject.methods.confirmReceived().send({\n    from: accounts[0],\n    gas: 1000000\n  });\n  console.info(receipt);\n  console.info(\"Item received successfully!\");\n  return receipt;\n};\nmodule.exports = {\n  payee,\n  payer,\n  amount,\n  deadline,\n  checkContractStatus,\n  finishContract,\n  terminateContract,\n  prePay,\n  shipItem,\n  confirmReceived\n};","map":{"version":3,"names":["web3","require","compileContract","getContractObject","contractReceipt","contractObject","eth","Contract","abi","address","payee","result","methods","call","payer","amount","deadline","checkContractStatus","finishContract","accounts","getAccounts","receipt","send","from","gas","console","info","terminateContract","prePay","value","utils","toWei","shipItem","confirmReceived","module","exports"],"sources":["C:/Users/wwwna/Desktop/test/src/ethereum/logic.js"],"sourcesContent":["const { web3 } = require(\"./web3\");\r\nconst compileContract = require(\"../contract/ptTrans.json\");\r\n\r\n// 取得部署在網路上的智能合約物件 (ganache-cli 或測試網路或主網路)\r\n// 網路可以在 web3 檔案中選擇\r\n\r\nconst getContractObject = () => {\r\n    const contractReceipt = require(\"./receipt-metamask.json\");\r\n    // 建立智能合約物件/實例\r\n    const contractObject = new web3.eth.Contract(\r\n        compileContract.abi,\r\n        contractReceipt.address\r\n    );\r\n\r\n    return contractObject;\r\n};\r\n\r\nconst payee = async () => {\r\n    const contractObject = getContractObject();\r\n    const result = await contractObject.methods.payee().call();\r\n    return result;\r\n};\r\n\r\nconst payer = async () => {\r\n    const contractObject = getContractObject();\r\n    const result = await contractObject.methods.payer().call();\r\n    return result;\r\n};\r\n\r\nconst amount = async () => {\r\n    const contractObject = getContractObject();\r\n    const result = await contractObject.methods.amount().call();\r\n    return result;\r\n};\r\n\r\nconst deadline = async () => {\r\n    const contractObject = getContractObject();\r\n    const result = await contractObject.methods.deadline().call();\r\n    return result;\r\n};\r\n\r\nconst checkContractStatus = async () => {\r\n    const contractObject = getContractObject();\r\n    const result = await contractObject.methods.checkContractStatus().call();\r\n    return result;\r\n};\r\n\r\nconst finishContract = async () => {\r\n    const accounts = await web3.eth.getAccounts();\r\n    const contractObject = getContractObject();\r\n    const receipt = await contractObject.methods.finishContract().send({ from: accounts[0], gas: 1000000 });\r\n    console.info(receipt);\r\n    console.info(\"Contract successfully finished!\");\r\n    return receipt;\r\n};\r\n\r\nconst terminateContract = async () => {\r\n    const accounts = await web3.eth.getAccounts();\r\n    const contractObject = getContractObject();\r\n    const receipt = await contractObject.methods.terminateContract().send({ from: accounts[0], gas: 1000000 });\r\n    console.info(receipt);\r\n    console.info(\"Contract successfully terminated!\");\r\n    return receipt;\r\n};\r\n\r\nconst prePay = async (value) => {\r\n    const accounts = await web3.eth.getAccounts();\r\n    const contractObject = getContractObject();\r\n    const receipt = await contractObject.methods.prePay().send({\r\n      from: accounts[0],\r\n      value: web3.utils.toWei(value, 'ether'),\r\n      gas: 1000000\r\n    });\r\n    console.info(receipt);\r\n    console.info(\"Pre-payment successful!\");\r\n    return receipt;\r\n  };\r\n  \r\n  const shipItem = async () => {\r\n    const accounts = await web3.eth.getAccounts();\r\n    const contractObject = getContractObject();\r\n    const receipt = await contractObject.methods.shipItem().send({ from: accounts[0], gas: 1000000 });\r\n    console.info(receipt);\r\n    console.info(\"Item shipped successfully!\");\r\n    return receipt;\r\n  };\r\n  \r\n  const confirmReceived = async () => {\r\n    const accounts = await web3.eth.getAccounts();\r\n    const contractObject = getContractObject();\r\n    const receipt = await contractObject.methods.confirmReceived().send({ from: accounts[0], gas: 1000000 });\r\n    console.info(receipt);\r\n    console.info(\"Item received successfully!\");\r\n    return receipt;\r\n  };\r\n  \r\n  module.exports = {\r\n    payee,\r\n    payer,\r\n    amount,\r\n    deadline,\r\n    checkContractStatus,\r\n    finishContract,\r\n    terminateContract,\r\n    prePay,\r\n    shipItem,\r\n    confirmReceived\r\n  };\r\n  \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}